name: Model Training Pipeline
on:
  push:
    branches:
      - prod
    paths:
      - 'src/pipeline/train_model.py'
      - 'data/CarPrice_Assignment.csv.dvc'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      should-train: ${{ steps.should-train.outputs.result }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            model-training:
              - 'src/pipeline/train_model.py'
              - 'data/CarPrice_Assignment.csv.dvc'

      - name: Should run model training
        id: should-train
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/prod" ]]; then
            if [[ "${{ steps.changes.outputs.model-training }}" == "true" ]]; then
              echo "result=true" >> $GITHUB_OUTPUT
              echo "🚀 Will run model training"
            else
              echo "result=false" >> $GITHUB_OUTPUT
              echo "⏭️ No relevant changes, skipping model training"
            fi
          else
            echo "result=false" >> $GITHUB_OUTPUT
            echo "⏭️ Not prod push, skipping model training"
          fi

  wait-for-scheduler:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.should-train == 'true'
    steps:
      - name: Wait for workflow-scheduler to complete
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: 'deploy'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

  train-model:
    runs-on: ubuntu-latest
    needs: wait-for-scheduler
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add VPS host to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Run Luigi task for model training
        run: |
          echo "Running model training task on VPS"
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} "cd ~/model-service && docker exec luigi_scheduler python -m luigi --module src.pipeline.train_model CarPricePredictionPipeline --local-scheduler"